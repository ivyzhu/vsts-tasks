{
  "loc.friendlyName": "Maven",
  "loc.helpMarkDown": "[More Information](https://go.microsoft.com/fwlink/?LinkID=613723)",
  "loc.description": "使用 Apache Maven 生成",
  "loc.instanceNameFormat": "Maven $(mavenPOMFile)",
  "loc.group.displayName.junitTestResults": "JUnit 测试结果",
  "loc.group.displayName.codeCoverage": "代码覆盖率",
  "loc.group.displayName.advanced": "高级",
  "loc.group.displayName.CodeAnalysis": "代码分析",
  "loc.input.label.mavenPOMFile": "Maven POM 文件",
  "loc.input.help.mavenPOMFile": "从存储库根路径到 Maven POM 文件的相对路径。",
  "loc.input.label.options": "选项",
  "loc.input.label.goals": "目标",
  "loc.input.label.publishJUnitResults": "发布到 TFS/Team Services",
  "loc.input.help.publishJUnitResults": "选择此选项可将 Maven 生成产生的 JUnit 测试结果发布到 TFS/Team Services。每个与“测试结果文件”匹配的测试结果文件都会在 TFS/Team Services 中发布为测试运行。",
  "loc.input.label.testResultsFiles": "测试结果文件",
  "loc.input.help.testResultsFiles": "测试结果文件路径。可以使用通配符。例如，\"**/TEST-*.xml\" 表示名称以 TEST- 开头的所有 XML 文件。",
  "loc.input.label.testRunTitle": "测试运行标题",
  "loc.input.help.testRunTitle": "为测试运行提供一个名称。",
  "loc.input.label.codeCoverageTool": "Code Coverage Tool",
  "loc.input.help.codeCoverageTool": "选择代码覆盖率工具。",
  "loc.input.label.classFilter": "类包含/排除筛选器",
  "loc.input.help.classFilter": "用于在收集代码覆盖率时包含或排除类的筛选器列表，以逗号分隔。例如: +:com.*、+:org.*、-:my.app*.*。",
  "loc.input.label.classFilesDirectories": "类文件目录",
  "loc.input.help.classFilesDirectories": "此字段是多模块项目的必填字段。指定从 Maven POM 文件到目录的相对路径的列表，以逗号分隔，其中目录包含类文件和存档文件(JAR 和 WAR 等)。报告这些目录中类文件的代码覆盖率。例如: target/classes,target/testClasses。",
  "loc.input.label.srcDirectories": "源文件目录",
  "loc.input.help.srcDirectories": "此字段是多模块项目的必需字段。指定从 Maven POM 文件到源代码目录的相对路径列表(以逗号分隔)。代码覆盖率报表将使用这些路径来突出显示源代码。例如: src/java,src/Test。",
  "loc.input.label.javaHomeSelection": "JAVA_HOME 设置方法",
  "loc.input.help.javaHomeSelection": "可通过选择将在生成期间发现的 JDK 版本或手动输入 JDK 路径来设置 JAVA_HOME。",
  "loc.input.label.jdkVersion": "JDK 版本",
  "loc.input.help.jdkVersion": "将尝试发现所选 JDK 版本的路径并相应地设置 JAVA_HOME。",
  "loc.input.label.jdkUserInputPath": "JDK 路径",
  "loc.input.help.jdkUserInputPath": "将 JAVA_HOME 设置到给定路径。",
  "loc.input.label.jdkArchitecture": "JDK 体系结构",
  "loc.input.help.jdkArchitecture": "可以选择提供 JDK 的体系结构(x86、x64)。",
  "loc.input.label.mavenVersionSelection": "Maven 版本",
  "loc.input.help.mavenVersionSelection": "使用默认的 Maven 版本或指定自定义路径下的版本。",
  "loc.input.label.mavenPath": "Maven 路径",
  "loc.input.help.mavenPath": "将自定义路径提供给 Maven 安装(如 /usr/share/maven)。",
  "loc.input.label.mavenSetM2Home": "设置 M2_HOME 变量",
  "loc.input.help.mavenSetM2Home": "将 M2_HOME 变量设置为自定义 Maven 安装路径。",
  "loc.input.label.sqAnalysisEnabled": "运行 SonarQube 分析",
  "loc.input.help.sqAnalysisEnabled": "Run a [SonarQube analysis](https://go.microsoft.com/fwlink/?LinkID=708598) after executing the current goals. 'install' or 'package' goals should be executed first.",
  "loc.input.label.sqConnectedServiceName": "SonarQube 终结点",
  "loc.input.help.sqConnectedServiceName": "SonarQube 服务器通用终结点",
  "loc.input.label.sqDbDetailsRequired": "SonarQube 服务器版本低于 5.2",
  "loc.input.help.sqDbDetailsRequired": "如果使用 SonarQube 服务器 5.1 或更低版本，则必须指定数据库连接详细信息。",
  "loc.input.label.sqDbUrl": "Db 连接字符串",
  "loc.input.help.sqDbUrl": "仅适用于 SonarQube 服务器 5.1 及更低版本。输入数据库连接设置(即 sonar.jdbc.url)。例如: jdbc:jtds:sqlserver://localhost/sonar;SelectMethod=Cursor",
  "loc.input.label.sqDbUsername": "Db 用户名",
  "loc.input.help.sqDbUsername": "仅适用于 SonarQube 服务器 5.1 及更低版本。输入数据库用户的用户名(即 sonar.jdbc.username)。",
  "loc.input.label.sqDbPassword": "Db 用户密码",
  "loc.input.help.sqDbPassword": "仅适用于 SonarQube 服务器 5.1 及更低版本。输入数据库用户的密码，即 sonar.jdbc.password",
  "loc.input.label.sqAnalysisWaitForAnalysis": "Wait for SonarQube analysis and add quality gate details",
  "loc.input.help.sqAnalysisWaitForAnalysis": "Wait for the SonarQube server to finish analysing the build, then add quality gate details to the SonarQube build summary.",
  "loc.input.label.pmdAnalysisEnabled": "运行 PMD 分析",
  "loc.input.help.pmdAnalysisEnabled": "使用 PMD Java 静态分析工具查找代码中的 bug。",
  "loc.messages.sqCommon_CreateTaskReport_MissingField": "未能创建 TaskReport 对象。缺少字段: {0}",
  "loc.messages.sqCommon_WaitingForAnalysis": "Waiting for the SonarQube server to analyse the build.",
  "loc.messages.sqCommon_NotWaitingForAnalysis": "Build not configured to wait for the SonarQube analysis. Detailed quality gate status will not be available.",
  "loc.messages.sqCommon_QualityGateStatusUnknown": "Could not detect the quality gate status or a new status has been introduced.",
  "loc.messages.sqCommon_InvalidResponseFromServer": "Server responded with an invalid or unexpected response format.",
  "loc.messages.codeAnalysis_ToolIsEnabled": "%s 分析已启用。",
  "loc.messages.codeAnalysis_ToolFailed": "%s 分析失败。",
  "loc.messages.sqAnalysis_IncrementalMode": "检测到 PR 生成 - 在增量模式下运行 SonarQube 分析",
  "loc.messages.sqAnalysis_BuildSummaryTitle": "SonarQube 分析报表",
  "loc.messages.sqAnalysis_BuildSummaryNotAvailableInPrBuild": "详细的 SonarQube 报表不可用于拉取请求生成。",
  "loc.messages.sqAnalysis_TaskReportInvalid": "任务报表无效或丢失。请检查 SonarQube 是否成功完成。",
  "loc.messages.sqAnalysis_BuildSummary_LinkText": "详细的 SonarQube 报表",
  "loc.messages.sqAnalysis_BuildSummary_CannotAuthenticate": "Cannot authenticate to the SonarQube server. Check the saved endpoint details and the status of the server.",
  "loc.messages.sqAnalysis_AnalysisTimeout": "The analysis did not complete in the allotted time of {0} seconds.",
  "loc.messages.codeAnalysisBuildSummaryLine_SomeViolationsSomeFiles": "%s 发现 %d 个冲突存在于 %d 个文件中。",
  "loc.messages.codeAnalysisBuildSummaryLine_SomeViolationsOneFile": "%s 发现 %d 个冲突存在于 1 个文件中。",
  "loc.messages.codeAnalysisBuildSummaryLine_OneViolationOneFile": "%s 发现 1 个冲突存在于 1 个文件中。",
  "loc.messages.codeAnalysisBuildSummaryLine_NoViolations": "%s 未发现任何冲突。",
  "loc.messages.codeAnalysisBuildSummaryTitle": "Code Analysis Report",
  "loc.messages.codeAnalysisArtifactSummaryTitle": "Code Analysis Results"
}