{
  "loc.friendlyName": "Gradle",
  "loc.helpMarkDown": "[More Information](https://go.microsoft.com/fwlink/?LinkID=613720)",
  "loc.description": "使用 Gradle 包裝函式指令碼來建置",
  "loc.instanceNameFormat": "gradlew $(tasks)",
  "loc.group.displayName.junitTestResults": "JUnit 測試結果",
  "loc.group.displayName.codeCoverage": "程式碼涵蓋範圍",
  "loc.group.displayName.advanced": "進階",
  "loc.group.displayName.CodeAnalysis": "程式碼分析",
  "loc.input.label.wrapperScript": "Gradle 包裝函式",
  "loc.input.help.wrapperScript": "從儲存機制根路徑到 Gradle 包裝函式指令碼的相對路徑。",
  "loc.input.label.options": "選項",
  "loc.input.label.tasks": "工作",
  "loc.input.label.cwd": "工作目錄",
  "loc.input.help.cwd": "在其中執行 Gradle 組建的工作目錄。未指定時，會使用儲存機制根路徑。",
  "loc.input.label.publishJUnitResults": "發行至 TFS/Team Services",
  "loc.input.help.publishJUnitResults": "選取這個選項，以將 Gradle 組建所產生的 JUnit 測試結果發行至 TFS/Team Services。每個與「測試結果檔案」相符的測試結果檔案都將在 TFS/Team Services 中以測試回合發行。",
  "loc.input.label.testResultsFiles": "測試結果檔案",
  "loc.input.help.testResultsFiles": "測試結果檔案路徑。可使用萬用字元。例如 `**/TEST-*.xml` 即適用於所有名稱開頭為 TEST- 的 XML 檔案。",
  "loc.input.label.testRunTitle": "測試回合標題",
  "loc.input.help.testRunTitle": "提供測試回合的名稱。",
  "loc.input.label.codeCoverageTool": "Code Coverage Tool",
  "loc.input.help.codeCoverageTool": "選取程式碼涵蓋範圍工具。",
  "loc.input.label.classFilesDirectories": "類別檔目錄",
  "loc.input.help.classFilesDirectories": "以逗號分隔的清單，內含包含類別檔案和封存檔案 (JAR、WAR 等) 的目錄。回報的程式碼涵蓋範圍為這些目錄中的類別檔案。一般而言，會搜尋 Gradle 組建之預設類別目錄 `build/classes/main` 下的類別",
  "loc.input.label.classFilter": "類別包含/排除篩選器",
  "loc.input.help.classFilter": "以逗號分隔的清單，內含可從收集程式碼涵蓋範圍將類別加以包含或排除的篩選條件。例如: +:com.*,+:org.*,-:my.app*.*。",
  "loc.input.label.javaHomeSelection": "設定 JAVA_HOME 由",
  "loc.input.help.javaHomeSelection": "選取一個能在組建期間探索到的 JDK 版本，或者手動輸入 JDK 路徑，均能為 JAVA_HOME 進行設定。",
  "loc.input.label.jdkVersion": "JDK 版本",
  "loc.input.help.jdkVersion": "將嘗試探索所選取 JDK 版本的路徑並據此設定 JAVA_HOME。",
  "loc.input.label.jdkUserInputPath": "JDK 路徑",
  "loc.input.help.jdkUserInputPath": "將 JAVA_HOME 設定為指定路徑。",
  "loc.input.label.jdkArchitecture": "JDK 架構",
  "loc.input.help.jdkArchitecture": "選擇性地提供 JDK 的架構 (x86、x64)。",
  "loc.input.label.sqAnalysisEnabled": "Run SonarQube Analysis",
  "loc.input.help.sqAnalysisEnabled": "在執行目前目標之後執行 [SonarQube 分析](https://go.microsoft.com/fwlink/?LinkID=708598)。應該先執行 'install' 或 'package' 目標。",
  "loc.input.label.sqConnectedServiceName": "SonarQube Endpoint",
  "loc.input.help.sqConnectedServiceName": "The endpoint that specifies the SonarQube server to use",
  "loc.input.label.sqProjectName": "SonarQube 專案名稱",
  "loc.input.help.sqProjectName": "SonarQube 專案名稱，即 sonar.ProjectName。",
  "loc.input.label.sqProjectKey": "SonarQube 專案機碼",
  "loc.input.help.sqProjectKey": "SonarQube 專案唯一索引鍵，即 sonar.projectKey。",
  "loc.input.label.sqProjectVersion": "SonarQube 專案版本",
  "loc.input.help.sqProjectVersion": "SonarQube 專案版本，即 sonar.projectVersion。",
  "loc.input.label.sqDbDetailsRequired": "The SonarQube server version is lower than 5.2",
  "loc.input.help.sqDbDetailsRequired": "如果使用的是 SonarQube 伺服器 5.1 或較舊版本，則您必須指定資料庫連接詳細資料。",
  "loc.input.label.sqDbUrl": "Db Connection String",
  "loc.input.help.sqDbUrl": "僅限 SonarQube 伺服器 5.1 和較舊版本。輸入資料庫連接設定 (即 sonar.jdbc.url)。例如: jdbc:jtds:sqlserver://localhost/sonar;SelectMethod=Cursor",
  "loc.input.label.sqDbUsername": "DB 使用者名稱",
  "loc.input.help.sqDbUsername": "僅限 SonarQube 伺服器 5.1 和較舊版本。輸入資料庫使用者的使用者名稱 (即 sonar.jdbc.username)。",
  "loc.input.label.sqDbPassword": "Db User Password",
  "loc.input.help.sqDbPassword": "僅限 SonarQube 伺服器 5.1 和較舊版本。輸入資料庫使用者的密碼 (即 sonar.jdbc.password)",
  "loc.input.label.sqAnalysisWaitForAnalysis": "Wait for SonarQube analysis and add quality gate details",
  "loc.input.help.sqAnalysisWaitForAnalysis": "Wait for the SonarQube server to finish analysing the build, then add quality gate details to the SonarQube build summary.",
  "loc.input.label.pmdAnalysisEnabled": "Run PMD Analysis",
  "loc.input.help.pmdAnalysisEnabled": "Use the PMD Java static analysis tool to look for bugs in the code.",
  "loc.messages.sqCommon_CreateTaskReport_MissingField": "無法建立 TaskReport 物件。遺漏欄位: {0}",
  "loc.messages.sqCommon_WaitingForAnalysis": "Waiting for the SonarQube server to analyse the build.",
  "loc.messages.sqCommon_NotWaitingForAnalysis": "Build not configured to wait for the SonarQube analysis. Detailed quality gate status will not be available.",
  "loc.messages.sqCommon_QualityGateStatusUnknown": "Could not detect the quality gate status or a new status has been introduced.",
  "loc.messages.sqCommon_InvalidResponseFromServer": "Server responded with an invalid or unexpected response format.",
  "loc.messages.codeAnalysis_ToolIsEnabled": "已啟用 %s 分析。",
  "loc.messages.codeAnalysis_ToolFailed": "%s 分析失敗。",
  "loc.messages.sqAnalysis_IncrementalMode": "偵測到 PR 組建 - 正在以累加模式執行 SonarQube 分析",
  "loc.messages.sqAnalysis_BuildSummaryTitle": "SonarQube 分析報表",
  "loc.messages.sqAnalysis_BuildSummaryNotAvailableInPrBuild": "提取要求組建的詳細 SonarQube 報表無法使用。",
  "loc.messages.sqAnalysis_TaskReportInvalid": "任務報表無效或遺漏。檢查 SonarQube 已順利完成。",
  "loc.messages.sqAnalysis_BuildSummary_LinkText": "詳細 SonarQube 報表",
  "loc.messages.sqAnalysis_BuildSummary_CannotAuthenticate": "Cannot authenticate to the SonarQube server. Check the saved endpoint details and the status of the server.",
  "loc.messages.sqAnalysis_AnalysisTimeout": "The analysis did not complete in the allotted time of {0} seconds.",
  "loc.messages.codeAnalysisBuildSummaryLine_SomeViolationsSomeFiles": "%s found %d violations in %d files.",
  "loc.messages.codeAnalysisBuildSummaryLine_SomeViolationsOneFile": "%s found %d violations in 1 file.",
  "loc.messages.codeAnalysisBuildSummaryLine_OneViolationOneFile": "%s found 1 violation in 1 file.",
  "loc.messages.codeAnalysisBuildSummaryLine_NoViolations": "%s found no violations.",
  "loc.messages.codeAnalysisBuildSummaryTitle": "Code Analysis Report",
  "loc.messages.codeAnalysisArtifactSummaryTitle": "Code Analysis Results"
}